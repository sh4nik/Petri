package com.sm.petri.core;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import processing.core.PApplet;

public class TestEnvironment extends PApplet {

    List<Bloop> bloops = new ArrayList<>();
    List<Food> foodList = new ArrayList<>();

    private static final int BLOB_COUNT = 50;
    private static final int FOOD_COUNT = 500;

//    private double[] genes = {-0.38746798038482666,-0.8490146398544312,-0.7334953546524048,0.641432523727417,0.7474620342254639,0.7084528207778931,-0.15198874473571777,0.7329657077789307,-0.5510956048965454,-0.46473968029022217,-0.014219284057617188,-0.8311880553104549};
    private double[] genes = {-0.6452251816273726,-0.32813592239472456,0.9284277986568463,0.10269168138101037,-0.9754092371965314,-0.5759366358574332,0.9082691222215697,-0.2938918963293293,0.5813986555629873,-0.4748468369885457,-0.967333185944551,-0.7958489097179493,-0.34468360835329714,0.6334940916005276,0.06835901622389429,0.4439805656308262,-0.16279058558000037,-0.5700459563103611,0.20818695780080443,0.30738089916002487,-0.6428329566593358,-0.6878388448822867,-0.721082831202327,0.2617795405121939,0.28634055966659,0.8548921965656084,0.7504492476001496,-0.5670570189987908,-0.09100726272235793,0.24623664776939824,0.4890077755528055,0.7888134312324258,-0.5398850127914653,0.5234176268622786,-0.7348900525213429,0.8758038417147016,0.6393485208133582,-0.05338590756370354,0.3710336348440111,0.8634908864888109,0.36614295918637496,-0.28061452491223215,0.3528366962803613,-0.4242620904520764,0.4797915396000705,-0.8354551111896185,0.8920824331911472,0.10587252888499576,0.680182300433559,0.9605771782716217,-0.39390802695274074,0.9932319936326779,-0.8373551130847435,-0.009501340568415229,0.24681477417396724,0.3369939227907439,-0.6328326998354943,-0.5240847187871311,-0.28191224888011635,0.9740609223893986,0.2832833759680584,-0.809496410146704,-0.4196683562872159,-0.1347026259486337,-0.6254780659511401,-0.1363818750568624,-0.7514327610264143,-0.9532090010943843,0.6544953071639164,-0.5009860055290596,-0.9338474268871004,0.8025319845887209,-0.10706765137311713,0.9126367168297611,0.5018331700707397,0.7135804401975079,-0.4888183557169554,0.5510508151610967,-0.39089118023190905,0.8112521129220844,-0.7611785167272153,-0.09092919227921614,-0.8693642029234591,0.23400274972291735,-0.32302270161989677,-0.7661244724332645,-0.14850734573521351,0.2991734815992353,0.9014381207296247,-0.6784482006166243,-0.31738138602054244,0.5636752768335107,-0.12921513270801288,0.5831305830700162,-0.625890512397953,0.10742626318415316,-0.9577739927819404,-0.23206400667132432,-0.48931054945320607,0.1607566124668245,-0.4058745148139714,-0.12827940078644995,0.8136217579742944,0.9482827880299378,-0.16324971037992497,-0.22811761294214927,0.852567477583086,-0.31023464103001974,0.6251101409143558,-0.9921460575405848,0.29346780369371817,-0.8068399331082683,-0.6112798688959517,-0.8776378011977388,0.6615690280826689,-0.3610643198157345,0.26701327303122113,0.4281527277613415,-0.08094647039681357,-0.11444733923171813,0.23530524718465862,0.9603576450516371,-0.5093775790905062,-0.3881528962841614,0.7585829323526898,-0.31784639398517234,0.49362403654810594,-0.9182309051785225,-0.09395763536308832,-0.3479536495515969,0.18059119004304325,-0.8206196822739718,-0.5368928149195604,-0.11361776504517018,-0.5976733475918121,-0.003833884607030491,0.4938245433135482,-0.7544821523489622,-0.3156523167424957,0.7598951961286122,0.9988995012824655,-0.9781357720443363,0.21753305597639017,-0.3136797396730817,-0.057907733846899956,-0.7011136039395616,-0.3673703780787463,-0.48214268672329896,0.7394319888528977,0.17926206467190342,-0.9219793937918682};

    public static void main(String[] args) {
        PApplet.main("com.sm.petri.core.TestEnvironment");
    }

    @Override
    public void settings() {
        size(1240, 660);
        
    }

    @Override
    public void setup() {
        background(50);
        for (int i = 0; i < BLOB_COUNT; i++) {
            bloops.add(new Bloop(this, foodList, genes, bloops, null));
        }
    }

    @Override
    public void draw() {

        frameRate(60);
        background(40);

        Iterator<Bloop> iter = bloops.iterator();

        while (iter.hasNext()) {
            Bloop bloop = iter.next();

            bloop.update();
            bloop.display();

            if (bloop.getHealth() <= 0) {
                iter.remove();
            }
        }

        for (int i = foodList == null ? 0 : foodList.size(); i < FOOD_COUNT; i++) {
            foodList.add(new Food(this));
        }

        for (Food food : foodList) {
            food.display();
        }

    }

}
