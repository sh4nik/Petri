package com.sm.petri.core;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import processing.core.PApplet;

public class TestEnvironment extends PApplet {

    List<Bloop> bloops = new ArrayList<>();
    List<Food> foodList = new ArrayList<>();

    private static final int BLOB_COUNT = 5;
    private static final int FOOD_COUNT = 10;

//    private double[] genes = {-0.38746798038482666,-0.8490146398544312,-0.7334953546524048,0.641432523727417,0.7474620342254639,0.7084528207778931,-0.15198874473571777,0.7329657077789307,-0.5510956048965454,-0.46473968029022217,-0.014219284057617188,-0.8311880553104549};
    private double[] genes = {-0.8097081924345596,0.30896745652634827,0.25919310545064356,0.7210415317027461,-0.8696371591346425,-0.019930859799480727,-0.39081881972747357,0.7408655392334018,0.035077799818263866,-0.40181654398371847,0.14938993452801141,0.940156218116208,0.0699459107289897,-0.7570576546148066,0.11350983267498904,0.24131362727873817,0.5919258705321526,0.5945733109476448,-0.1329332257464838,-0.09409709346808892,0.874297955044149,0.5399513322720191,0.7262024040627764,0.5281587181445582,0.20940771214883025,-0.366884467975908,0.49116004246546896,0.5989569969472841,0.6150241195259207,-0.4180186734111092,0.32457626315871635,-0.6045874170038354,0.8595505673111301,0.46607587241243476,0.27220915892911357,0.21237106463228606,0.8199287196202039,-0.47539030934576654,-0.9533591014224475,0.2204548188532831,0.2995069332652509,0.39845815333501866,0.15712037476643936,0.3800389928231107,-0.8928833431314871,-0.5533670102137529,0.17689732722400153,-0.39114980199168203,-0.8752571125224365,0.5075225712516165,0.34043746891907367,0.5575833734026141,-0.07982245671558719,0.8203219747683783,0.034304247944221045,-0.910937736721462,0.26702011266421066,-0.9952338654536833,0.17043222840186956,0.5770156079849731,0.5081245534839398,-0.11542052755025689,0.49771728168654183,0.5725127429637389,-0.10061857781853023,0.6632140175586598,-0.10868005387221469,-0.7250509443052697,-0.5533646264936227,0.13254085628607792,0.17979914024001897,-0.5411407084998536,0.6408295565379851,0.84982111022105,-0.5867709823853269,-0.7840412752200014,0.6463514486435689,-0.5044131547921368,-0.5131485917403242,0.5058072166298067,-0.7939393156659649,-0.010368686870292021,0.3624204391060444,0.6646799849496874,0.17648120903793751,-0.49200074409414096,0.03000671766465679,0.7830178215594539,-0.21899419678817367,-0.060810983427989074,0.1951246818516228,-0.49519736354593125,-0.2862609143569742,-0.6969296489136596,0.010646622397621819,0.327125705621933,0.21025609066948658,0.13072353814046922,0.7394380703893113,-0.9229394551187147,0.4824695944512425,0.7919803731590465,-0.08643669054993353,0.7760628559105245,-0.34658376298532445,-0.13612779768559335,0.8442097738953795,-0.9030671468710217,0.9278331314976871,0.9610762772991035,-0.955288545683792,0.34502513225773,-0.9386151670335362,0.01608288544604619,0.11918017154540395,-0.2916501214009827,-0.2362787512215503,0.9977233288804357,0.14427403107850667,0.9284706874584012,-0.8964498070758884,0.45257453002328396,-0.9910281104946109,-0.02549457434227098,-0.9877579985157955,-0.08547905718103965,0.6459227850767604,-0.2387619752527126,-0.8015641299545682,0.45874091783974813,-0.3495043277157248,-0.5121512807701135,-0.993803365620273,-0.15664701376963575,0.29814208468844705,0.26399273221939623,-0.96246802666282,0.0021788456947959833,0.1867381276531932,0.6989940907105323,-0.03333725385212738,0.005094163353809744,-0.2014338931072116,-0.49586652207557724,0.0048033262148508005,-0.7037464007045483,0.24855189427001223,-0.25712579471457886,-0.8167763240208794,0.38314934852140703,0.8274649125122151};

    public static void main(String[] args) {
        PApplet.main("com.sm.petri.core.TestEnvironment");
    }

    @Override
    public void settings() {
        size(1240, 660);
        background(50);
    }

    @Override
    public void setup() {
        for (int i = 0; i < BLOB_COUNT; i++) {
            bloops.add(new Bloop(this, foodList, genes, bloops));
        }
    }

    @Override
    public void draw() {

        frameRate(60);
        background(40);

        Iterator<Bloop> iter = bloops.iterator();

        while (iter.hasNext()) {
            Bloop bloop = iter.next();

            bloop.update();
            bloop.display();

            if (bloop.getHealth() <= 0) {
                iter.remove();
            }
        }

        for (int i = foodList == null ? 0 : foodList.size(); i < FOOD_COUNT; i++) {
            foodList.add(new Food(this));
        }

        for (Food food : foodList) {
            food.display();
        }

    }

}
